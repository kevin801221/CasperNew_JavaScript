{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback } from 'react';\nimport { removeBackgroundAPI, replaceBackgroundAPI, batchRemoveBackgroundAPI } from '../utils/apiService';\n\n/**\n * 自定義 Hook 用於處理圖片編輯相關操作\n * @returns {Object} 圖片編輯相關的狀態和方法\n */\nconst useImageEditor = () => {\n  _s();\n  const [editHistory, setEditHistory] = useState([]);\n  const [currentEditIndex, setCurrentEditIndex] = useState(-1);\n  const [isEditing, setIsEditing] = useState(false);\n\n  /**\n   * 添加編輯歷史記錄\n   * @param {Object} imageData - 圖片數據\n   */\n  const addEditHistory = useCallback(imageData => {\n    // 如果當前不是最新的編輯狀態，則刪除之後的歷史記錄\n    if (currentEditIndex < editHistory.length - 1) {\n      setEditHistory(prev => prev.slice(0, currentEditIndex + 1));\n    }\n    setEditHistory(prev => [...prev, imageData]);\n    setCurrentEditIndex(prev => prev + 1);\n  }, [editHistory, currentEditIndex]);\n\n  /**\n   * 復原編輯\n   * @returns {Object|null} 復原後的圖片數據，如果無法復原則返回 null\n   */\n  const undoEdit = useCallback(() => {\n    if (currentEditIndex > 0) {\n      setCurrentEditIndex(prev => prev - 1);\n      return editHistory[currentEditIndex - 1];\n    }\n    return null;\n  }, [editHistory, currentEditIndex]);\n\n  /**\n   * 重做編輯\n   * @returns {Object|null} 重做後的圖片數據，如果無法重做則返回 null\n   */\n  const redoEdit = useCallback(() => {\n    if (currentEditIndex < editHistory.length - 1) {\n      setCurrentEditIndex(prev => prev + 1);\n      return editHistory[currentEditIndex + 1];\n    }\n    return null;\n  }, [editHistory, currentEditIndex]);\n\n  /**\n   * 移除圖片背景\n   * @param {string} imageUrl - 圖片 URL\n   * @returns {Promise<string>} 處理後的圖片 URL\n   */\n  const removeBackground = useCallback(async imageUrl => {\n    setIsEditing(true);\n    try {\n      console.log('正在處理圖片去背:', imageUrl);\n\n      // 調用 API 服務進行去背處理\n      const processedImageUrl = await removeBackgroundAPI(imageUrl);\n\n      // 添加到編輯歷史\n      addEditHistory({\n        url: processedImageUrl,\n        has_bg_removed: true\n      });\n      return processedImageUrl;\n    } catch (error) {\n      console.error('圖片去背處理失敗:', error);\n      throw error;\n    } finally {\n      setIsEditing(false);\n    }\n  }, [addEditHistory]);\n\n  /**\n   * 批量移除圖片背景\n   * @param {Array<string>} imageUrls - 圖片 URL 數組\n   * @returns {Promise<Array<string>>} 處理後的圖片 URL 數組\n   */\n  const batchRemoveBackground = useCallback(async imageUrls => {\n    setIsEditing(true);\n    try {\n      console.log('正在批量處理圖片去背:', imageUrls);\n\n      // 調用 API 服務進行批量去背處理\n      const processedImageUrls = await batchRemoveBackgroundAPI(imageUrls);\n\n      // 返回處理後的圖片 URL 數組\n      return processedImageUrls;\n    } catch (error) {\n      console.error('批量圖片去背處理失敗:', error);\n      throw error;\n    } finally {\n      setIsEditing(false);\n    }\n  }, []);\n\n  /**\n   * 替換圖片背景\n   * @param {string} imageUrl - 圖片 URL\n   * @param {string} backgroundUrl - 背景圖片 URL\n   * @returns {Promise<string>} 處理後的圖片 URL\n   */\n  const replaceBackground = useCallback(async (imageUrl, backgroundUrl) => {\n    setIsEditing(true);\n    try {\n      console.log('正在處理背景替換:', imageUrl, backgroundUrl);\n\n      // 調用 API 服務進行背景替換處理\n      const processedImageUrl = await replaceBackgroundAPI(imageUrl, backgroundUrl);\n\n      // 添加到編輯歷史\n      addEditHistory({\n        url: processedImageUrl,\n        background: backgroundUrl\n      });\n      return processedImageUrl;\n    } catch (error) {\n      console.error('背景替換處理失敗:', error);\n      throw error;\n    } finally {\n      setIsEditing(false);\n    }\n  }, [addEditHistory]);\n  return {\n    isEditing,\n    canUndo: currentEditIndex > 0,\n    canRedo: currentEditIndex < editHistory.length - 1,\n    undoEdit,\n    redoEdit,\n    removeBackground,\n    batchRemoveBackground,\n    replaceBackground\n  };\n};\n_s(useImageEditor, \"QU6JimW/rWsc77EuVwd3VBAGyzs=\");\nexport default useImageEditor;","map":{"version":3,"names":["useState","useCallback","removeBackgroundAPI","replaceBackgroundAPI","batchRemoveBackgroundAPI","useImageEditor","_s","editHistory","setEditHistory","currentEditIndex","setCurrentEditIndex","isEditing","setIsEditing","addEditHistory","imageData","length","prev","slice","undoEdit","redoEdit","removeBackground","imageUrl","console","log","processedImageUrl","url","has_bg_removed","error","batchRemoveBackground","imageUrls","processedImageUrls","replaceBackground","backgroundUrl","background","canUndo","canRedo"],"sources":["/Users/kevinluo/application/Casper_final_version/react-frontend/src/hooks/useImageEditor.js"],"sourcesContent":["import { useState, useCallback } from 'react';\nimport { removeBackgroundAPI, replaceBackgroundAPI, batchRemoveBackgroundAPI } from '../utils/apiService';\n\n/**\n * 自定義 Hook 用於處理圖片編輯相關操作\n * @returns {Object} 圖片編輯相關的狀態和方法\n */\nconst useImageEditor = () => {\n  const [editHistory, setEditHistory] = useState([]);\n  const [currentEditIndex, setCurrentEditIndex] = useState(-1);\n  const [isEditing, setIsEditing] = useState(false);\n\n  /**\n   * 添加編輯歷史記錄\n   * @param {Object} imageData - 圖片數據\n   */\n  const addEditHistory = useCallback((imageData) => {\n    // 如果當前不是最新的編輯狀態，則刪除之後的歷史記錄\n    if (currentEditIndex < editHistory.length - 1) {\n      setEditHistory(prev => prev.slice(0, currentEditIndex + 1));\n    }\n    \n    setEditHistory(prev => [...prev, imageData]);\n    setCurrentEditIndex(prev => prev + 1);\n  }, [editHistory, currentEditIndex]);\n\n  /**\n   * 復原編輯\n   * @returns {Object|null} 復原後的圖片數據，如果無法復原則返回 null\n   */\n  const undoEdit = useCallback(() => {\n    if (currentEditIndex > 0) {\n      setCurrentEditIndex(prev => prev - 1);\n      return editHistory[currentEditIndex - 1];\n    }\n    return null;\n  }, [editHistory, currentEditIndex]);\n\n  /**\n   * 重做編輯\n   * @returns {Object|null} 重做後的圖片數據，如果無法重做則返回 null\n   */\n  const redoEdit = useCallback(() => {\n    if (currentEditIndex < editHistory.length - 1) {\n      setCurrentEditIndex(prev => prev + 1);\n      return editHistory[currentEditIndex + 1];\n    }\n    return null;\n  }, [editHistory, currentEditIndex]);\n\n  /**\n   * 移除圖片背景\n   * @param {string} imageUrl - 圖片 URL\n   * @returns {Promise<string>} 處理後的圖片 URL\n   */\n  const removeBackground = useCallback(async (imageUrl) => {\n    setIsEditing(true);\n    try {\n      console.log('正在處理圖片去背:', imageUrl);\n      \n      // 調用 API 服務進行去背處理\n      const processedImageUrl = await removeBackgroundAPI(imageUrl);\n      \n      // 添加到編輯歷史\n      addEditHistory({ url: processedImageUrl, has_bg_removed: true });\n      \n      return processedImageUrl;\n    } catch (error) {\n      console.error('圖片去背處理失敗:', error);\n      throw error;\n    } finally {\n      setIsEditing(false);\n    }\n  }, [addEditHistory]);\n  \n  /**\n   * 批量移除圖片背景\n   * @param {Array<string>} imageUrls - 圖片 URL 數組\n   * @returns {Promise<Array<string>>} 處理後的圖片 URL 數組\n   */\n  const batchRemoveBackground = useCallback(async (imageUrls) => {\n    setIsEditing(true);\n    try {\n      console.log('正在批量處理圖片去背:', imageUrls);\n      \n      // 調用 API 服務進行批量去背處理\n      const processedImageUrls = await batchRemoveBackgroundAPI(imageUrls);\n      \n      // 返回處理後的圖片 URL 數組\n      return processedImageUrls;\n    } catch (error) {\n      console.error('批量圖片去背處理失敗:', error);\n      throw error;\n    } finally {\n      setIsEditing(false);\n    }\n  }, []);\n\n  /**\n   * 替換圖片背景\n   * @param {string} imageUrl - 圖片 URL\n   * @param {string} backgroundUrl - 背景圖片 URL\n   * @returns {Promise<string>} 處理後的圖片 URL\n   */\n  const replaceBackground = useCallback(async (imageUrl, backgroundUrl) => {\n    setIsEditing(true);\n    try {\n      console.log('正在處理背景替換:', imageUrl, backgroundUrl);\n      \n      // 調用 API 服務進行背景替換處理\n      const processedImageUrl = await replaceBackgroundAPI(imageUrl, backgroundUrl);\n      \n      // 添加到編輯歷史\n      addEditHistory({ url: processedImageUrl, background: backgroundUrl });\n      \n      return processedImageUrl;\n    } catch (error) {\n      console.error('背景替換處理失敗:', error);\n      throw error;\n    } finally {\n      setIsEditing(false);\n    }\n  }, [addEditHistory]);\n\n  return {\n    isEditing,\n    canUndo: currentEditIndex > 0,\n    canRedo: currentEditIndex < editHistory.length - 1,\n    undoEdit,\n    redoEdit,\n    removeBackground,\n    batchRemoveBackground,\n    replaceBackground\n  };\n};\n\nexport default useImageEditor;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}